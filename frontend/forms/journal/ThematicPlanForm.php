<?php

namespace frontend\forms\journal;

use common\Model;
use common\repositories\dictionaries\PeopleRepository;
use common\repositories\educational\LessonThemeRepository;
use common\repositories\educational\TrainingGroupRepository;
use common\repositories\providers\lesson_theme\LessonThemeProvider;
use common\repositories\providers\people\PeopleProvider;
use frontend\models\work\educational\training_group\LessonThemeWork;
use frontend\models\work\general\PeopleWork;
use Yii;

class ThematicPlanForm extends Model
{
    private LessonThemeRepository $lessonThemeRepository;
    private PeopleRepository $peopleRepository;

    public int $groupId;

    /** @var LessonThemeWork[] $lessonThemes */
    public array $lessonThemes;

    /** @var PeopleWork[] $availableTeachers */
    public array $availableTeachers;

    public function __construct(
        int $groupId,
        LessonThemeRepository $lessonThemeRepository = null,
        PeopleRepository $peopleRepository = null,
        $config = []
    )
    {
        parent::__construct($config);
        $this->groupId = $groupId;
        if (!$lessonThemeRepository) {
            $lessonThemeRepository = Yii::createObject(
                LessonThemeRepository::class,
                ['provider' => Yii::createObject(LessonThemeProvider::class)]
            );
        }

        if (!$peopleRepository) {
            $peopleRepository = Yii::createObject(
                PeopleRepository::class,
                ['provider' => Yii::createObject(PeopleProvider::class)]
            );
        }

        $this->lessonThemeRepository = $lessonThemeRepository;
        $this->peopleRepository = $peopleRepository;

        $this->lessonThemes = $this->lessonThemeRepository->getByTrainingGroupId($this->groupId);
        $this->availableTeachers = $this->peopleRepository->getPeopleFromMainCompany();
    }

    public function rules()
    {
        return [
            [['lessonThemes'], 'safe']
        ];
    }

    public function load($data, $formName = null)
    {
        $lessonThemesData = $data["LessonThemeWork"];
        if (isset($lessonThemesData)) {
            foreach ($this->lessonThemes as $lessonTheme) {
                foreach ($lessonThemesData["id"] as $index => $id) {
                    if ($lessonTheme->id == $id) {
                        $lessonTheme->teacher_id = $lessonThemesData["teacher_id"][$index];
                    }
                }
            }
        }

        return parent::load($data, $formName); // TODO: Change the autogenerated stub
    }

    /**
     * Возвращает номер учебной группы
     * @return mixed|string|null
     * @throws \yii\base\InvalidConfigException
     */
    public function getTrainingGroupNumber()
    {
        $trainingGroup = (Yii::createObject(TrainingGroupRepository::class))->get($this->groupId);
        return $trainingGroup ? $trainingGroup->number : '--';
    }
}